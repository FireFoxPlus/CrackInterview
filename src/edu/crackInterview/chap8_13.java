package edu.crackInterview;

public class chap8_13 {
	//	13.1实现c方法，打印输出文件的最后k行
	//13.2比较并对比散列表和STL map。散列表是怎么实现的？如果输入的数据量不大，
	//可以选用那些数据结构来替代散列表
	//13.3c++虚函数的工作原理是什么？
	//13.4深拷贝和浅拷贝的区别？
	//13.5c语言的关键字volatile有什么作用？
	//13.6基类的析构函数为什么要声明为virtual？
	//13.7编写方法，传入参数为指向node的指针，返回传入数据结构的完整拷贝，
	//其中node数据结构含有两个指向其他node的指针
	//13.8编写智能指针类。智能指针是一种数据类型，一般用模板实现，模拟指针行为的同时，
	//提供自动垃圾回收机制，会自动记录smartPointer<T*>对象的引用计数，
	//一旦T类型对象的引用计数为零，就会释放该对象
	//13.9编写支持对齐分配的malloc和free函数，分配内存时，
	//malloc函数分配的地址必须可以被2的n次方整除
	//示例：align_malloc(1000 , 128)返回的内存地址可以被128整除。
	//并指向一块大小为1000字节的内存
	//align_free会释放align_malloc分配的内存
	//13.10用c编写my2DAlloc函数，可以分配二维数组，
	//将malloc函数的调用次数降低到最少，并确保可以通过arr[i][j]访问该内存
}
