package edu.crackInterview;

public class chap8_17 {
	//17.1不用临时变量，直接交换两个数
	//已用c实现
	
	// 17.2判断玩家是否赢了井字游戏
	//17.3算出n阶乘有多少个尾随0
	//17.4找出两个数字中较大的一个，不用if-else或其他比较运算符
	
	//17.5 计算机有四个槽，每个槽放一个球，颜色可能是红色、黄色、绿色或蓝色
	//作为用户，你视图猜出颜色组合，打个比方，可能会猜YRGB。
	//要是才对某个槽的颜色，则算一次猜中，要是只才对颜色但是槽位猜错，就算一次伪猜中
	//猜中不算伪猜中。比如：实际为RGBY，猜，GGRR，则算一次猜中，一次伪猜中。
	//已用c解决
	
	//给定一个猜测和一种颜色组合，编写一个方法，返回猜中和伪猜中的次数
	//17.6给定一个整数数组，找出索引m和n，只要将m和n之间的元素排好序，
	//整个数组就是有序的。注意m-n越小越好，也就是说，找出符合条件的最短序列
	//17.7给定一个整数，打印该整数的英文描述
	//17.8给定一个整数数组，求出综合最大的连续数列，并返回综合
	//17.9设计一个方法，找出任意指定单词在一本书中出现的频率
	//17.10xml非常冗长，找到一种编码方式，可将每个标签对应为预先定义好的整数值。
	//打印xml元素编码后的版本
	//17.11给定rand5()，实现一个方法rand7()。也就是说，给定一个产生0-4随机数的方法，
	//产生0到6的随机数
	//17.12设计算法，找出数组中，两数之和为指定值的所有整数对
	//17.13有个简单的类似节点的数据结构BiNode，包含两个指向其他节点的指针
	//public class{
	//public BiNode node1 , node2;
	//public int data;
	//}
	// 数据结构BiNode可以用来表示二叉树，或双向链表，编写一个方法， 将二叉查找树
	//转换为双向链表。要求所有数值的排序不变，
	//17.14刚写好文章，却因为误用”查找/替换“，不慎删除了文档中所有空格、标点，
	//大写变为小写。只要能正确的分离各个单词，加标点和大小写都不是问题，大部分单词
	//在词典中都可以找到，有些则找不到。
	//给定一个字典，设计一个算法，找出拆分一连串单词的最佳方式。最佳的意义是：
	//解析后无法辨识的单词最少，无法辨识的单词全部用大写表示
}
